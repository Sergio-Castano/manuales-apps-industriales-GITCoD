<!-- MQTT Script -->
<script src="/js/paho-mqtt.js"></script>
<script>
    var client = new Paho.Client("192.168.0.107", 9001, "webClient_loto_init");
    let clickCount = 0;

    client.onConnectionLost = function (responseObject) {
        if (responseObject.errorCode !== 0) {
            console.error("üîå Conexi√≥n perdida:", responseObject.errorMessage);
        }
    };

    client.connect({
        onSuccess: function () {
            console.log("‚úÖ Conectado a broker MQTT");
        },
        useSSL: false,
        onFailure: function (error) {
            console.error("‚ùå Error al conectar al broker:", error.errorMessage);
        }
    });

    function publishLOTOInit() {
        if (!client.isConnected()) {
            console.warn("‚ö†Ô∏è Cliente no conectado todav√≠a.");
            return;
        }

        const message = new Paho.Message("0");
        message.destinationName = "/loto_init";
        message.qos = 2;
        client.send(message);
        console.log("üì§ Publicado '0' en /loto_init (al tercer clic)");
    }
</script>

<div class="my-body-area">
    <div class="section-left">
        <div class="top-half-left">
            <div id="profile-pic" class="profile-pic"></div>
            <div id="user-name" class="user-name">Nombre Apellido</div>
            <div id="user-email" class="user-email">email@ejemplo.com</div>
        </div>
        <div class="bottom-half-left">
            <div class="stage">
                A. Preparaci√≥n
            </div>
            <div class="stage">
                B. Bloqueo
            </div>
            <div class="stage">
                C. Intervenci√≥n
            </div>
            <div class="stage">
                D. Desbloqueo
            </div>
            <div class="stage">
                E. Puesta a punto
            </div>
            <div class="stage">
                F. Entrega
            </div>
        </div>
    </div>
    <div class="section-right">
        <div class="top-half-right">
            <div style="padding-left: 40px; color: white; font-weight: bold; font-size: 1.5rem;">Asistente de
                mantenimiento</div>
            <div style="padding-right: 40px; color: white;"> Logout </div>
        </div>

        <div class="bottom-half-right">
            <div style="margin-top: 30px;">
                <div class="progress-container" id="progressBar"></div>

                <script>
                    function createProgressBar(totalSteps) {
                        const progressBar = document.getElementById('progressBar');
                        progressBar.innerHTML = ''; // Limpiar contenido previo

                        for (let i = 1; i <= totalSteps; i++) {
                            const step = document.createElement('div');
                            step.classList.add('step');

                            const stepNumber = document.createElement('div');
                            stepNumber.classList.add('step-number');
                            stepNumber.textContent = i;

                            const led = document.createElement('div');
                            led.classList.add('led');
                            led.id = led-${i};

                            step.appendChild(stepNumber);
                            step.appendChild(led);
                            progressBar.appendChild(step);
                        }
                    }

                    function updateProgressBar(totalSteps, activeSteps) {
                        createProgressBar(totalSteps);

                        for (let i = 1; i <= activeSteps; i++) {
                            const led = document.getElementById(led-${i});
                            if (led) {
                                led.classList.add('active');
                            }
                        }
                    }

                </script>
            </div>
            <div class="info-container mt-5">
                <div class="box-container" style="width: 70%;">
                    <div id="steps-container" class="box box2">
                        <p id="titulo" class="text-center" style="font-size: 2.5rem; font-weight: 600;">
                        </p>
                        <p id="cuerpo" style="font-size: 2rem; text-align: justify;">
                        </p>
                    </div>
                    <div class="box box3 mb-3">
                        <p id="info_adicional" style=" font-size: 1.25rem;">
                        </p>
                    </div>
                    <div class="box mt-4 mb-5"
                        style="display: flex; align-items: center;  justify-content: center; width:100%;">
                        <div class="box"
                            style="display: flex; align-items: center;  justify-content: center;  gap: 10px; width:100%;">
                            <input type="checkbox" id="confirm-check" style="width: 2rem; height: 2rem;">
                            <span id="confirm-text" style="font-size: 1.5rem;"></span>
                        </div>
                    </div>
                    <div class="button-container">
                        <button type="button" id="prev-step" class="btn btn-secondary btn-lg">
                            <i class="bi bi-arrow-left fs-1"></i>
                        </button>
                        <button type="button" id="next-step" class="btn btn-secondary btn-lg">
                            <i class="bi bi-arrow-right fs-1"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Centrar checkbox y texto */
    .check-container {
        display: flex;
        align-items: center;
        /* Centrar verticalmente */
        justify-content: center;
        /* Centrar horizontalmente */
        gap: 10px;
        /* Espacio entre el checkbox y el texto */
        font-size: 1.5rem;
        padding: 15px;
    }

    /* Ajustar tama√±o del checkbox */
    #confirm-check {
        width: 24px;
        height: 24px;
    }

    /* Mantener la posici√≥n del bot√≥n de avanzar */
    .button-container {
        display: flex;
        justify-content: space-between;
        width: 100%;
    }

    #prev-step {
        visibility: hidden;
        /* Oculta pero mantiene el espacio */
    }

    .btn {
        width: 45%;
        background-color: #2b3b4a;
    }
</style>

<script>
    setUserProfile("{{usuario.picture}}", "{{usuario.name}}", "{{usuario.email}}")
    updateProgressBar(3, 1);
</script>

<script>
    const stages = document.querySelectorAll('.stage');
    const progressMessage = document.getElementById('progress-message');
    let currentStage = 1;

    function updateStage(stage) {
        stages.forEach((element, index) => {
            if (index + 1 < stage) {
                element.classList.add('completed');
                element.classList.remove('active');
            } else if (index + 1 === stage) {
                element.classList.add('active');
                element.classList.remove('completed');
            } else {
                element.classList.remove('active', 'completed');
            }
        });
    }

    updateStage(currentStage);
</script>

<script>
    function replaceNewlinesWithBreaks(text) {
        return text.replace(/\n/g, '<br>');
    }

    document.addEventListener('DOMContentLoaded', () => {
        const steps = [
            {
                title: '1. Prep√°rese para la intervenci√≥n',
                body: replaceNewlinesWithBreaks("Revise la Ficha de Bloqueo de la m√°quina para identificar las fuentes de energ√≠a involucradas, c√≥mo controlarlas y los dispositivos de bloqueo que va a necesitar."),
                confirmText: "Confirmo haberme preparado",
                info: ""
            },
            {
                title: "2. Notifique al personal",
                body: replaceNewlinesWithBreaks("Avise a supervisores y operadores de la m√°quina la necesidad de detenerla para realizar el mantenimiento programado."),
                confirmText: "Confirmo haber notificado al personal",
                info: ""
            },
            {
                title: "3. Pare la m√°quina",
                body: replaceNewlinesWithBreaks("Pare la m√°quina desde su respectivo tablero de mando, verificando que quede en la posici√≥n correcta para el mantenimiento."),
                confirmText: "Confirmo haber detenido la m√°quina",
                info: ""
            },
            {
                title: "4. Asegure el √°rea de trabajo",
                body: replaceNewlinesWithBreaks("Delimite la zona con se√±ales y avisos para evitar el paso de personal."),
                confirmText: "Confirmo haber asegurado el area",
                info: ""
            }
        ];

        let currentStep = 0;
        const prevButton = document.getElementById('prev-step');
        const nextButton = document.getElementById('next-step');
        const confirmCheck = document.getElementById('confirm-check');
        const confirmText = document.getElementById('confirm-text');

        function renderStep(index) {
            if (index < 0 || index >= steps.length) return;

            document.getElementById('titulo').innerHTML = steps[index].title;
            document.getElementById('cuerpo').innerHTML = steps[index].body;
            confirmText.innerHTML = steps[index].confirmText;
            confirmCheck.checked = false;
            prevButton.style.visibility = index === 0 ? 'hidden' : 'visible';
            updateProgressBar(4, index + 1);
        }

        prevButton.addEventListener('click', () => {
            if (currentStep > 0) {
                currentStep--;
                renderStep(currentStep);
            }
        });

        let clickCounter = 0;

        nextButton.addEventListener('click', () => {
            if (!confirmCheck.checked) {
                alert("Debe confirmar que ha realizado este paso antes de continuar.");
                return;
            }

            clickCounter++;
            if (clickCounter === 3) {
                publishLOTOInit();  // üîÅ Enviar '0' al topic solo al tercer clic
            }


    if (currentStep === steps.length - 1) {
                const selectedOptionID = '{{selectedOptionID}}';
                const usuario = '{{usuario._id}}';
                fetch('/paso_0_4', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ usuario, selectedOptionID })
                }).then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.href = data.redirectUrl;
                        }
                    }).catch(console.error);
                return;
            }

            currentStep++;
            renderStep(currentStep);
        });

        renderStep(currentStep);
    });
</script>